{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/engine/Game.ts","webpack:///./src/engine/components/Behaviour.ts","webpack:///./src/engine/components/Component.ts","webpack:///./src/engine/components/ShapeRenderer.ts","webpack:///./src/engine/components/Transform.ts","webpack:///./src/engine/gameobjects/Camera.ts","webpack:///./src/engine/gameobjects/gameobject.ts","webpack:///./src/engine/geometry/Circle.ts","webpack:///./src/engine/geometry/Rectangle.ts","webpack:///./src/engine/input/InputManager.ts","webpack:///./src/engine/input/KeyCode.ts","webpack:///./src/engine/math/Vector2D.ts","webpack:///./src/engine/rendering/Canvas2DRenderer.ts","webpack:///./src/engine/rendering/RenderManager.ts","webpack:///./src/engine/scenes/Scene.ts","webpack:///./src/engine/scenes/SceneManager.ts","webpack:///./src/engine/state/StateMachine.ts","webpack:///./src/engine/update/UpdateManager.ts","webpack:///./src/game/components/MoveCameraBehaviour.ts","webpack:///./src/game/components/PlayerInputBehaviour.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"game.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.ts\");\n","import { Rectangle } from './geometry/Rectangle';\r\nimport { Canvas2DRenderer } from \"./rendering/Canvas2DRenderer\";\r\nimport { InputManager } from \"./input/InputManager\";\r\nimport { ViewPort } from \"./types/ViewPort\";\r\nimport { SceneManager } from './scenes/SceneManager';\r\n\r\nexport class Game {\r\n    \"use strict\";\r\n    \r\n    //****************************************x|****\r\n    //** attributes\r\n    //********************************************\r\n    \r\n    public  readonly _input         : InputManager;\r\n    private readonly _canvas        : HTMLCanvasElement;\r\n    private readonly _renderer      : Canvas2DRenderer;\r\n    private readonly _sceneManager  : SceneManager;\r\n    private _options                : GameOptions;\r\n    private _previousDelta          : number = 0;\r\n    private _viewPort               : ViewPort;\r\n    \r\n    //********************************************\r\n    //** ctor:\r\n    //********************************************\r\n    \r\n    constructor(options?: GameOptions) { \r\n        this._options = Object.assign({}, _defaultOptions, options);        \r\n        this._canvas        = document.getElementById(\"c\") as HTMLCanvasElement;\r\n        this._input         = new InputManager();\r\n        this._renderer      = new Canvas2DRenderer(this._canvas);\r\n        this._sceneManager  = new SceneManager(this);\r\n\r\n        this._updateViewPort();\r\n    }\r\n    \r\n    //********************************************\r\n    //** getters:\r\n    //********************************************\r\n    \r\n    get viewPort()      : ViewPort      { return this._viewPort; }\r\n    get input()         : InputManager  { return this._input; }\r\n    get sceneManager()  : SceneManager  { return this._sceneManager; }\r\n    get canvas()        : HTMLCanvasElement { return this._canvas; }\r\n    \r\n    //********************************************\r\n    //**public:\r\n    //********************************************\r\n    \r\n    /**\r\n     * Initialize game variables and configs. \r\n     * @param options \r\n     */\r\n    init(): Game {\r\n\r\n        this._input.init();\r\n        \r\n        \r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Start game loop\r\n     */\r\n    run(): void {\r\n        this._update(0);\r\n    }\r\n\r\n    //********************************************\r\n    //**private:\r\n    //********************************************\r\n    \r\n    /**\r\n     * Updates the view port.\r\n     */\r\n    private _updateViewPort(): void {\r\n        this._viewPort = {\r\n            width:   Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\r\n            height:  Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\r\n        }\r\n\r\n        this._canvas.width = this._viewPort.width;\r\n        this._canvas.height = this._viewPort.height;\r\n    }\r\n\r\n    /**\r\n     * Update and redraw game state. \r\n     * \r\n     * @param now \r\n     */\r\n    private _update(now: number): void {\r\n        let deltaTime: number = (now - this._previousDelta)/1000;\r\n        this._previousDelta = now;\r\n        \r\n        this._updateViewPort();\r\n        \r\n        this._sceneManager.update(deltaTime);\r\n     \r\n        this._render(deltaTime);\r\n\r\n        this._input.update();\r\n        requestAnimationFrame(this._update.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Clear canvas and render scene.\r\n     * \r\n     * @param dt  \r\n     */\r\n    private _render(dt: number): void {\r\n        let clearRect: Rectangle = new Rectangle(this._viewPort.width, this._viewPort.height);\r\n        this._renderer.renderRect(0, 0, clearRect, this._options.clearColor);\r\n        this._sceneManager.renderScene();\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport interface GameOptions {\r\n    clearColor?: string;\r\n}\r\n\r\n/**\r\n * \r\n */\r\nlet _defaultOptions: GameOptions = {\r\n    clearColor: \"#000000\"\r\n};\r\n","import { Component } from \"./Component\";\r\nimport { IUpdateable } from \"../update/IUpdateable\";\r\nimport { GameObject } from \"../gameobjects/gameobject\";\r\nimport { InputManager } from \"../input/InputManager\";\r\n\r\nexport abstract class Behaviour extends Component implements IUpdateable {\r\n    \r\n    protected _input: InputManager;\r\n\r\n    //********************************************\r\n    //**ctor:\r\n    //********************************************\r\n    \r\n    constructor(owner: GameObject) {\r\n        super(owner);\r\n        // add component to update manager.\r\n        owner.scene.updateManager.add(this);\r\n        this._input = owner.scene.game.input;\r\n    }\r\n    \r\n    //********************************************\r\n    //**abstract:\r\n    //********************************************\r\n    \r\n    abstract update(deltaTime: number): void;\r\n\r\n    //********************************************\r\n    //** \r\n    //********************************************\r\n    \r\n    /**\r\n     * Remove component from update manager\r\n     */\r\n    dispose(): void {\r\n        this._owner.scene.updateManager.remove(this);\r\n        super.dispose();\r\n    }\r\n}","import { GameObject } from \"../gameobjects/gameobject\";\r\nimport { IDisposable } from \"../../abstract/IDisposable\";\r\n\r\nexport abstract class Component implements IDisposable {\r\n\r\n    //********************************************\r\n    //** attributes:\r\n    //********************************************\r\n    \r\n    protected _owner: GameObject;\r\n    \r\n    //********************************************\r\n    //** ctor:\r\n    //********************************************\r\n    \r\n    constructor(owner: GameObject) {\r\n        this._owner = owner;\r\n    }\r\n\r\n    //********************************************\r\n    //**public:\r\n    //********************************************\r\n    \r\n    initialize(): void {}    \r\n    dispose(): void {}\r\n} ","import { IShape } from \"../geometry/IShape\";\r\nimport { Component } from \"./Component\";\r\nimport { Transform } from \"./Transform\";\r\nimport { Circle } from \"../geometry/Circle\";\r\nimport { IRenderable } from \"../rendering/IRenderable\";\r\nimport { Rectangle } from \"../geometry/Rectangle\";\r\nimport { Line } from \"../geometry/Line\";\r\nimport { Canvas2DRenderer } from \"../rendering/Canvas2DRenderer\";\r\nimport { GameObject } from \"../gameobjects/gameobject\";\r\nimport {Camera} from \"../gameobjects/Camera\";\r\nimport {Vector2D} from \"../math/Vector2D\";\r\n\r\nexport class ShapeRenderer extends Component implements IRenderable {\r\n    \r\n    //********************************************\r\n    //**attributes:\r\n    //********************************************\r\n        \r\n    public shape : IShape;\r\n    public color : string;\r\n    private _transform: Transform;\r\n\r\n    /**\r\n     *\r\n     */\r\n    constructor(owner: GameObject) {\r\n        super(owner);   \r\n        // add component to renderer. \r\n        this._owner.scene.renderer.add(this);\r\n    }\r\n\r\n    //********************************************\r\n    //**public:\r\n    //********************************************\r\n\r\n    /**\r\n     * \r\n     */\r\n    initialize(): void {\r\n        this._transform = this._owner.getComponent(Transform) as Transform;\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @param ctx \r\n     */\r\n    render(renderer: Canvas2DRenderer, camera: Camera): void {\r\n        let screenPos: Vector2D = camera.getScreenPosition(this._owner);\r\n        \r\n        if (this.shape instanceof Circle) {\r\n            let c: Circle = new Circle(this.shape.r * this._transform.scale.x);\r\n            \r\n            renderer.renderCircle(screenPos.x,screenPos.y,c,this.color);\r\n\r\n        } else if (this.shape instanceof Rectangle) {\r\n            let rect: Rectangle = new Rectangle(this.shape.width*this._transform.scale.x, this.shape.heigth*this._transform.scale.y);\r\n            \r\n            renderer.renderRect(screenPos.x,screenPos.y,this.shape,this.color);\r\n        } \r\n        /*else if (this.shape instanceof Line) {\r\n            renderer.renderLine(this.shape, this.color);\r\n        }*/\r\n    }    \r\n\r\n    /**\r\n     * Remove component from renderer.  \r\n     */\r\n    dispose(): void {\r\n        this._owner.scene.renderer.remove(this);\r\n        super.dispose();\r\n    }\r\n}","import { Vector2D } from \"../math/Vector2D\";\r\nimport { Component } from \"./Component\";\r\n\r\nexport class Transform extends Component {\r\n    private _position : Vector2D = Vector2D.Zero;\r\n    public get position() : Vector2D { return this._position; }\r\n    public set position(v : Vector2D) { this._position = v; }\r\n\r\n    private _rotation : Vector2D = Vector2D.Zero;\r\n    public get rotation() : Vector2D { return this._rotation; }\r\n    public set rotation(v : Vector2D) { this._rotation = v; }\r\n    \r\n    private _scale : Vector2D = Vector2D.One;\r\n    public get scale() : Vector2D { return this._scale; }\r\n    public set scale(v : Vector2D) { this._scale = v; }\r\n    \r\n    //********************************************************************************\r\n    //** public:\r\n    //********************************************************************************\r\n    \r\n    /**\r\n     * Translate the position in the direction of the vector.\r\n     * \r\n     * @param {Vector2D} vec\r\n     */\r\n    translate(vec: Vector2D|number, y?: number): void {\r\n        if(typeof vec === \"number\") {\r\n            this._position = this._position.add(vec, y);\r\n        } else { \r\n            this._position = this._position.add(vec);\r\n        }\r\n    }\r\n}","import {GameObject} from \"./gameobject\";\r\nimport {Vector2D} from \"../math/Vector2D\";\r\nimport {ViewPort} from \"../types/ViewPort\";\r\n\r\nexport class Camera extends GameObject {\r\n\r\n    /**\r\n     * Get screen position\r\n     * \r\n     * @param {GameObject} gameObject\r\n     * @return {Vector2D}\r\n     */\r\n    getScreenPosition(gameObject: GameObject): Vector2D {\r\n        let viewPort     : ViewPort = this.scene.game.viewPort;\r\n        let cameraOrigin : Vector2D = this.transform.position.flip().add(viewPort.width/2, viewPort.height/2);\r\n        let worldPos     : Vector2D = this.getWorldPosition(gameObject); \r\n        let offset       : Vector2D = cameraOrigin.add(worldPos);\r\n        \r\n        return (offset);\r\n    }\r\n\r\n    /**\r\n     * Gets the world position of the game object's position.\r\n     * \r\n     * @param {GameObject} gameObject\r\n     * @return {Vector2D}\r\n     */\r\n    getWorldPosition(gameObject: GameObject): Vector2D {\r\n        let worldPos: Vector2D = gameObject.transform.position;\r\n        if (gameObject.parent != null) {\r\n            worldPos = worldPos.add(this.getWorldPosition(gameObject.parent));\r\n        }\r\n        return worldPos;\r\n    }\r\n}","import { Transform } from \"../components/Transform\";\r\nimport { Component } from \"../components/Component\";\r\nimport { Scene } from \"../scenes/Scene\";\r\nimport { IDisposable } from \"../../abstract/IDisposable\";\r\n\r\n\r\nexport class GameObject implements IDisposable {\r\n    //********************************************\r\n    //** attributes:\r\n    //********************************************\r\n    \r\n    private readonly _components : Map<new(owner: GameObject) => Component, Component[]>;\r\n    private _transform  : Transform;\r\n    private _scene      : Scene;\r\n    \r\n    private readonly _children   : Set<GameObject> = new Set<GameObject>();\r\n    private _parent: GameObject;\r\n    private _name: string;\r\n    \r\n    //********************************************\r\n    //**ctor:\r\n    //********************************************\r\n    \r\n    constructor(scene: Scene, name?: string) {\r\n        this._scene         = scene;\r\n        this._components    = new Map<new(owner: GameObject) => Component, Component[]>();\r\n        this._transform     = new Transform(this);\r\n        this._transform     = this.attachComponent(Transform);\r\n    }\r\n    \r\n    //********************************************\r\n    //** getters and setters:\r\n    //********************************************\r\n    \r\n    get transform()  : Transform     { return this._transform; }\r\n    get scene()      : Scene         { return this._scene; } \r\n    get children()   : GameObject[]  { return Array.from(this._children); }\r\n    get parent()     : GameObject    { return this._parent; }\r\n    get name()       : string        { return this._name; }\r\n    \r\n    set transform(v: Transform)      { this._transform = v; }\r\n    \r\n\r\n    //********************************************\r\n    //**public:\r\n    //********************************************\r\n    \r\n    initialize(): void {\r\n        this._components.forEach(componentOfType => componentOfType.forEach(x => x.initialize()));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param parent \r\n     */\r\n    setParent(parent: GameObject): void {\r\n        if (parent != null) {\r\n            parent.addChild(this);\r\n            this._parent = parent;\r\n        } else if(this._parent != null) {\r\n            this._parent.removeChild(this);\r\n            this._parent = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param child \r\n     */\r\n    addChild(child: GameObject): void {\r\n        this._children.add(child);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param child \r\n     */\r\n    removeChild(child: GameObject): void {\r\n        this._children.delete(child);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param type\r\n     */\r\n    attachComponent<T extends Component>(type: new(owner: GameObject) => T): T {\r\n        if (type == null) {\r\n            throw new Error(\"Component cannot be null or undefined\");\r\n        }\r\n        if (<any>type === Transform && this._components.has(type)) {\r\n            throw new Error(\"A game object can only have one Transform component.\");\r\n        }\r\n        let component = new type(this);\r\n        \r\n        let value = this._components.get(type);\r\n         // Component does not exist on game object\r\n        if(value == null) {\r\n            this._components.set(type, [component]);\r\n        }\r\n        \r\n        //  One or more components exist on game object. Add to existing list.\r\n        else if(Array.isArray(value)) { \r\n            value.push(component);\r\n        }\r\n        \r\n        return component;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param type\r\n     * @param instance\r\n     */\r\n    detachComponent<T extends Component>(type: new(owner: GameObject) => T, instance: Component = null): T[] {\r\n        if(this._components.has(type) === false) { return null; }\r\n        \r\n        if (instance != null) {\r\n            let collection: Component[] = this._components.get(type);\r\n            \r\n            if (collection.length === 1) {  \r\n                let detached: Component = this.getComponent(type); \r\n                this._components.delete(type);\r\n            \r\n                return [detached] as T[];\r\n            } else {\r\n                let detached: Component = collection[collection.indexOf(instance)]; \r\n                this._components.set(type, collection.slice(collection.indexOf(instance), 1));\r\n                \r\n                return [detached] as T[];\r\n            }\r\n        } else {\r\n            let detached: Component[] = this._components.get(type);\r\n            this._components.delete(type);\r\n            \r\n            return detached as T[];\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param type\r\n     */\r\n    getComponent<T extends Component>(type: new(owner: GameObject) => T) : T {\r\n        if (this._components.has(type) === false) {\r\n            return null;\r\n        }\r\n\r\n        return this._components.get(type)[0] as T;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param type\r\n     */\r\n    getComponents<T extends Component>(type: new(owner: GameObject) => T) : T[] {\r\n        if (this._components.has(type) === false) {\r\n            return null;\r\n        }\r\n\r\n        return this._components.get(type) as T[];\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    dispose(): void {\r\n        this._components.forEach(componentsOfType => componentsOfType.forEach(x => x.dispose()));\r\n    }\r\n}","import { IShape } from './IShape';\r\n\r\nexport class Circle implements IShape {\r\n    \"use strict\";\r\n    //********************************************\r\n    //** attributes:\r\n    //********************************************\r\n    \r\n    private _r   : number;\r\n\r\n    //********************************************\r\n    //** ctor:\r\n    //********************************************\r\n\r\n    constructor(radius: number) {\r\n        this._r = radius;\r\n    }\r\n    \r\n    //********************************************\r\n    //** getters:\r\n    //********************************************\r\n    \r\n    get r() { return this._r; }\r\n}","import { IShape } from './IShape';\r\n\r\nexport class Rectangle implements IShape {\r\n    \"use strict\";\r\n\r\n    //********************************************\r\n    //** attributes:\r\n    //********************************************\r\n    \r\n    private _width  : number;\r\n    private _height : number;\r\n\r\n    //********************************************\r\n    //** ctor:\r\n    //********************************************\r\n    \r\n    constructor(width: number, height: number) {\r\n        this._width   = width;\r\n        this._height  = height;\r\n    }\r\n    \r\n    //********************************************\r\n    //** getters:\r\n    //********************************************\r\n\r\n    get width()     : number   { return this._width; }\r\n    get heigth()    : number   { return this._height; }\r\n}","import { Point } from './../math/Point';\r\nimport { MouseButtonCode } from './MouseButtonCode';\r\nimport { KeyCode } from \"./KeyCode\";\r\n\r\nexport class InputManager {\r\n    \"use strict\";\r\n    \r\n    //********************************************\r\n    //** attributes:\r\n    //********************************************\r\n  \r\n    private _currentKeyMap          : {[key:number]: boolean} = {};\r\n    private _previousKeyMap         : {[key:number]: boolean} = {};\r\n    private _currentMouseBtnMap     : {[key:number]: boolean} = {};\r\n    private _previousMouseBtnMap    : {[key:number]: boolean} = {};\r\n    private readonly _mousePosition : Point = {x: 0, y: 0};\r\n\r\n    //********************************************\r\n    //** ctor:\r\n    //********************************************\r\n\r\n    public InputManager() {\r\n\r\n    }\r\n    \r\n    //********************************************\r\n    //** public:\r\n    //********************************************\r\n    \r\n    /**\r\n     * \r\n     */\r\n    init(): void {\r\n        window.addEventListener(\"mousedown\", this._onMouseDownEventHandler.bind(this));\r\n        window.addEventListener(\"mouseup\", this._onMouseUpEventHandler.bind(this));\r\n        window.addEventListener(\"mousemove\", this._onMouseMoveEventHandler.bind(this));\r\n        window.addEventListener(\"keydown\", this._onKeyDownEventHandler.bind(this));\r\n        window.addEventListener(\"keyup\", this._onKeyUpEventHandler.bind(this)); \r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    dispose(): void {\r\n        window.removeEventListener(\"mousedown\", this._onMouseDownEventHandler.bind(this));\r\n        window.removeEventListener(\"mouseup\", this._onMouseUpEventHandler.bind(this));\r\n        window.removeEventListener(\"mousemove\", this._onMouseMoveEventHandler.bind(this));\r\n        window.removeEventListener(\"keydown\", this._onKeyDownEventHandler.bind(this));\r\n        window.removeEventListener(\"keyup\", this._onKeyUpEventHandler.bind(this)); \r\n    }\r\n\r\n\r\n    /**\r\n     * Gets the mouse position.\r\n     */\r\n    getMousePosition(relativeElement?: HTMLElement): Point {\r\n        if (relativeElement == null) {\r\n            return this._mousePosition;\r\n        } else {\r\n            let bbox    : ClientRect = relativeElement.getBoundingClientRect(),\r\n                relativeX : number     = this._mousePosition.x - bbox.left,\r\n                relativeY : number     = this._mousePosition.y - bbox.top;\r\n\r\n            relativeX = Math.max(0, Math.min(relativeX, bbox.width));\r\n            relativeY = Math.max(0, Math.min(relativeY, bbox.height));\r\n\r\n            return {\r\n                x: relativeX,\r\n                y: relativeY\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the given mouse btn is held down.\r\n     * \r\n     * @param btnCode \r\n     */\r\n    isMouseButtonDown(btnCode: number|MouseButtonCode): boolean {\r\n        return this._currentMouseBtnMap[btnCode] === true;\r\n    }\r\n\r\n    /**\r\n     * Checks if the given mouse btn is pressed.\r\n     * \r\n     * @param btnCode \r\n     */\r\n    isMouseButtonPressed(btnCode: number|MouseButtonCode): boolean {\r\n        return this._currentMouseBtnMap[btnCode] === true && this._previousMouseBtnMap[btnCode] !== true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param btnCode \r\n     */\r\n    isMouseButtonReleased(btnCode: number|MouseButtonCode): boolean {\r\n        return this._currentMouseBtnMap[btnCode] !== true && this._previousMouseBtnMap[btnCode] === true;\r\n    }\r\n\r\n    /**\r\n     * Checks if the given key is held down.\r\n     * \r\n     * @param btnCode \r\n     */\r\n    isKeyDown(keyCode: number|KeyCode): boolean {\r\n        return this._currentKeyMap[keyCode] === true;\r\n    }\r\n\r\n     /**\r\n     * Checks if the given key is pressed.\r\n     * \r\n     * @param btnCode \r\n     */\r\n    isKeyPressed(keyCode: number|KeyCode): boolean {\r\n        return this._currentKeyMap[keyCode] === true && this._previousKeyMap[keyCode] !== true;\r\n    }\r\n    \r\n    /**\r\n     * Update input state.\r\n     */\r\n    update(): void {\r\n        this._previousKeyMap = Object.assign({}, this._currentKeyMap);\r\n        this._previousMouseBtnMap = Object.assign({}, this._currentMouseBtnMap);\r\n    }\r\n\r\n    //********************************************\r\n    //** private:\r\n    //********************************************\r\n    \r\n    private _onMouseDownEventHandler(event: MouseEvent): void {\r\n        this._currentMouseBtnMap[event.button] = true;\r\n    }\r\n\r\n    private _onMouseUpEventHandler(event: MouseEvent): void {\r\n        delete this._currentMouseBtnMap[event.button];\r\n    }\r\n\r\n    private _onKeyDownEventHandler(event: KeyboardEvent): void {\r\n        event.preventDefault();\r\n        this._currentKeyMap[event.keyCode] = true;\r\n    }\r\n\r\n    private _onKeyUpEventHandler(event: KeyboardEvent): void {\r\n        delete this._currentKeyMap[event.keyCode];\r\n    }\r\n\r\n    private _onMouseMoveEventHandler(event: MouseEvent): void {\r\n        this._mousePosition.x = event.clientX;\r\n        this._mousePosition.y = event.clientY;\r\n    }\r\n}","export enum KeyCode  {\r\n    // Special keys\r\n    Backspace  = 8,\r\n    Tab        = 9,\r\n    Enter      = 13,\r\n    Shift      = 16,\r\n    Cntr       = 17,\r\n    Alt        = 18,\r\n    PauseBreak = 19,\r\n    CapsLock   = 20,\r\n\r\n    Space       = 32,\r\n    PageUp      = 33,\r\n    PageDown    = 34,\r\n    End         = 35,\r\n    Home        = 36,\r\n\r\n    Arrow_Left  = 37,\r\n    Arrow_Up    = 38,\r\n    Arrow_Right = 39,\r\n    Arrow_Down  = 40,\r\n\r\n    PrintScreen = 44,\r\n    Insert      = 45,\r\n    Delete      = 46,\r\n\r\n    // Keys\r\n    Key_0 = 48,\r\n    Key_1 = 49,\r\n    Key_2 = 50,\r\n    Key_3 = 51,\r\n    Key_4 = 52,\r\n    Key_5 = 53,\r\n    Key_6 = 54,\r\n    Key_7 = 55,\r\n    Key_8 = 56,\r\n    Key_9 = 57,\r\n    A = 65,\r\n    B = 66,\r\n    C = 67,\r\n    D = 68,\r\n    E = 69,\r\n    F = 70,\r\n    G = 71,\r\n    H = 72,\r\n    I = 73,\r\n    J = 74,\r\n    K = 75, \r\n    L = 76,\r\n    M = 77,\r\n    N = 78,\r\n    O = 79,\r\n    P = 80, \r\n    Q = 81, \r\n    R = 82, \r\n    S = 83,\r\n    T = 84,\r\n    U = 85,\r\n    V = 86,\r\n    W = 87,\r\n    X = 88,\r\n    Y = 89,\r\n    Z = 90,\r\n\r\n    Comma  = 188,\r\n    Dash   = 189,\r\n    Period = 190,\r\n    Tilde  = 220\r\n}","export class Vector2D {\r\n    \"use strict\";\r\n    \r\n    //********************************************\r\n    //** read only attributes. \r\n    //********************************************\r\n    \r\n    public static readonly Zero     = new Vector2D(); \r\n    public static readonly One      = new Vector2D(1,1); \r\n    public static readonly Left     = new Vector2D(-1,0); \r\n    public static readonly Right    = new Vector2D(1,0); \r\n    public static readonly Up       = new Vector2D(0,-1); \r\n    public static readonly Down     = new Vector2D(0,1);\r\n\r\n    //********************************************\r\n    //** attributes:\r\n    //********************************************\r\n    \r\n    private _x: number;\r\n    private _y: number;\r\n\r\n    //********************************************\r\n    //** ctor:\r\n    //********************************************\r\n    \r\n    constructor(x: number = 0, y: number = 0) {\r\n        this._x = x;\r\n        this._y = y;\r\n    }\r\n\r\n    //********************************************\r\n    //** \r\n    //********************************************\r\n    \r\n    get x(): number { return this._x; }\r\n    get y(): number { return this._y; }\r\n    get isZero(): boolean { return this.equal(Vector2D.Zero); }\r\n    get isOne(): boolean { return this.equal(Vector2D.One); }\r\n    \r\n    //********************************************\r\n    //** public:\r\n    //********************************************\r\n    \r\n    /**\r\n     * Adds another vector to the vector. \r\n     * Returns a new instance of Vector2D\r\n     * \r\n     * @param vec \r\n     */\r\n    add(vec: Vector2D|number, y?: number): Vector2D {\r\n        let nx: number,\r\n            ny: number;\r\n\r\n        if (typeof vec === \"number\") {\r\n            nx = this._x + vec;\r\n            ny = this._y + (y || vec);\r\n        } else {\r\n            nx = this._x + vec.x;\r\n            ny = this._y + vec.y;\r\n        }\r\n        \r\n        return new Vector2D(nx, ny);\r\n    }\r\n\r\n    /**\r\n     * Subtracts another vector to the vector. \r\n     * Returns a new instance of Vector2D\r\n     * \r\n     * @param vec \r\n     */\r\n    subtract(vec: Vector2D|number, y?: number): Vector2D { \r\n        let nx: number,\r\n            ny: number;\r\n\r\n        if (typeof vec === \"number\") {\r\n            nx = this._x - vec;\r\n            ny = this._y - (y || vec);\r\n        } else {\r\n            nx = this._x - vec.x;\r\n            ny = this._y - vec.y;\r\n        }\r\n\r\n        return new Vector2D(nx, ny);\r\n    }\r\n\r\n    /**\r\n     * Multiplies another vector to the vector.\r\n     * Returns a new instance of Vector2D\r\n     *\r\n     * @param vec\r\n     */\r\n    multiply(vec: Vector2D|number, y?: number): Vector2D {\r\n        let nx: number = 0,\r\n            ny: number = 0;\r\n\r\n        if (typeof vec === \"number\") {\r\n            nx = this._x * vec;\r\n            ny = this._y * (y || vec);\r\n        } else {\r\n            nx = this._x * vec.x;\r\n            ny = this._y * vec.y;\r\n        }\r\n\r\n        return new Vector2D(nx, ny);\r\n    }\r\n\r\n    /**\r\n     * Multiplies another vector to the vector.\r\n     * Returns a new instance of Vector2D\r\n     *\r\n     * @param vec\r\n     */\r\n    divide(vec: Vector2D|number, y?: number): Vector2D {\r\n        let nx: number = 0,\r\n            ny: number = 0;\r\n\r\n        if (typeof vec === \"number\") {\r\n            nx = this._x / vec;\r\n            ny = this._y / (y || vec);\r\n        } else {\r\n            nx = this._x / vec.x;\r\n            ny = this._y / vec.y;\r\n        }\r\n\r\n        return new Vector2D(nx, ny);\r\n    }\r\n\r\n    /**\r\n     * Normalizes the current vector.\r\n     * Returns a new instance of Vector2D\r\n     */\r\n    normalize(): Vector2D {\r\n        let lenght: number = this.length();\r\n        if (lenght != 0) {\r\n            return new Vector2D(this._x / lenght, this._y / lenght);\r\n        } else {\r\n            return new Vector2D();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    normal(): Vector2D {\r\n        return new Vector2D(-this.y, this.x).normalize();\r\n    }\r\n\r\n    /**\r\n     * Gets the length of the current vector.\r\n     */\r\n    length(): number {\r\n        return Math.sqrt((this._x * this._x) + (this._y * this._y));\r\n    } \r\n\r\n    /**\r\n     * Checks if the vector x and y is equal to the given vector.\r\n     * \r\n     * @param vec \r\n     */\r\n    equal(vec: Vector2D): boolean {\r\n        return vec != null && this._x === vec.x && this._y === vec.y;\r\n    }\r\n\r\n    /**\r\n     * Finds the dot product between the two vectors.\r\n     * \r\n     * @param vec \r\n     */\r\n    dot(vec: Vector2D): number {        \r\n        let unit1: Vector2D = this.normalize(),\r\n            unit2: Vector2D = vec.normalize();\r\n\r\n        return (unit1.x * unit2.x) + (unit1.y * unit2.y);\r\n    }\r\n\r\n    /**\r\n     * Finds the cross product between two vectors.\r\n     * @param vec \r\n     */\r\n    cross(vec: Vector2D): number {\r\n        let unit1: Vector2D = this.normalize(),\r\n            unit2: Vector2D = vec.normalize(); \r\n\r\n        return (unit1.x * unit2.x) - (unit1.y * unit2.y);\r\n    }\r\n    \r\n    /**\r\n     * Checks if the \r\n     * \r\n     * @param vec \r\n     */\r\n    isPerpendicular(vec: Vector2D): boolean {\r\n        return this.dot(vec) === 0;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Vector2D} normal\r\n     * @return {Vector2D}\r\n     */\r\n    reflect(normal: Vector2D): Vector2D {\r\n        let n: Vector2D = normal.normalize();\r\n        let dot: number = (this.x * n.x) + (this.y * n.y);\r\n        let x: number = this.x - 2 * dot * n.x;\r\n        let y: number = this.y - 2 * dot * n.y;\r\n        \r\n        return new Vector2D(x, y);\r\n    }\r\n\r\n    /**\r\n     * Rotates the vector. \r\n     * \r\n     * @param {number} angle\r\n     * @return {Vector2D}\r\n     */\r\n    rotate(angle: number): Vector2D {\r\n        let x: number = this.x * Math.cos(angle) - this.y * Math.sin(angle);\r\n        let y: number = this.x * Math.sin(angle) + this.y * Math.cos(angle);\r\n\r\n        return new Vector2D(x, y);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @return {Vector2D}\r\n     */\r\n    flip(): Vector2D {\r\n        return new Vector2D(-this.x, -this.y);\r\n    }\r\n}","import { Rectangle } from './../geometry/Rectangle';\r\nimport { Circle } from \"./../geometry/Circle\";\r\nimport { Line } from \"./../geometry/Line\";\r\nimport { Vector2D } from \"../math/Vector2D\";\r\nimport { IRenderable } from './IRenderable';\r\n\r\nexport class Canvas2DRenderer {\r\n    \"use strict\";\r\n\r\n    //********************************************\r\n    //** attributes:\r\n    //********************************************\r\n    \r\n    private readonly _ctx           : CanvasRenderingContext2D;\r\n    \r\n    //********************************************\r\n    //** ctor:\r\n    //********************************************\r\n    \r\n    constructor(canvas: HTMLCanvasElement) {\r\n        this._ctx = canvas.getContext(\"2d\");\r\n    }\r\n\r\n    \r\n    get renderingContext(): CanvasRenderingContext2D { return this._ctx; }\r\n\r\n    //********************************************\r\n    //** public:\r\n    //********************************************\r\n    \r\n\r\n    /**\r\n     * \r\n     * @param x \r\n     * @param y \r\n     * @param w \r\n     * @param h \r\n     * @param colorStyle \r\n     */\r\n    public renderRect(x: number, y: number, rect: Rectangle, colorStyle: string = \"gray\"): void {\r\n        this._ctx.fillStyle = colorStyle;\r\n        this._ctx.beginPath();\r\n        this._ctx.rect(x, y, rect.width, rect.heigth);\r\n        this._ctx.fill();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param x \r\n     * @param y \r\n     * @param r \r\n     * @param colorStyle \r\n     */\r\n    public renderCircle(x: number, y: number, c: Circle, colorStyle: string = \"gray\"): void {\r\n        this._ctx.fillStyle = colorStyle;\r\n        this._ctx.beginPath();\r\n        this._ctx.arc(x, y, c.r, 0, 2 * Math.PI);\r\n        this._ctx.fill();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param l \r\n     */\r\n    public renderLine(l: Line, color: string = \"red\"): void {\r\n        this._ctx.strokeStyle = color;\r\n        this._ctx.lineWidth = 2;\r\n        this._ctx.beginPath();\r\n        this._ctx.moveTo(l.p1.x, l.p1.y);\r\n        this._ctx.lineTo(l.p2.x, l.p2.y);\r\n        this._ctx.stroke();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param l \r\n     * @param color \r\n     */\r\n    public renderDirLine(l: Line, color: string = \"red\"): void {\r\n        this.renderLine(l);\r\n        let c: Circle = new Circle(10);\r\n        this.renderCircle(l.p2.x, l.p2.y, c, color);\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @param l \r\n     * @param color \r\n     */\r\n    public renderFatLine(l: Line, color: string = \"red\"): void {\r\n        this._ctx.strokeStyle = color;\r\n        this._ctx.lineWidth = 5;\r\n        this._ctx.beginPath();\r\n        this._ctx.moveTo(l.p1.x, l.p1.y);\r\n        this._ctx.lineTo(l.p2.x, l.p2.y);\r\n        this._ctx.stroke();    \r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param x \r\n     * @param y \r\n     * @param txt \r\n     */\r\n    public renderText(txt: string, x: number|Vector2D, y?: number): void {\r\n        this._ctx.fillStyle = \"black\";\r\n        this._ctx.font = \"30px Arial\";\r\n\r\n        if (typeof x === \"number\") {\r\n            this._ctx.fillText(txt, x, y);\r\n        } else {\r\n            this._ctx.fillText(txt, x.x, x.y);\r\n        }\r\n    }\r\n    \r\n    \r\n    public getTextWidth(txt: string): number {\r\n        this._ctx.font = \"30px Arial\";\r\n        return this._ctx.measureText(txt).width;\r\n    }\r\n}","import { IRenderable } from \"./IRenderable\";\r\nimport { Canvas2DRenderer } from \"./Canvas2DRenderer\";\r\nimport {Camera} from \"../gameobjects/Camera\";\r\nimport {Scene} from \"../scenes/Scene\";\r\nimport {ViewPort} from \"../types/ViewPort\";\r\n\r\nexport class RenderManager {\r\n      \r\n    //********************************************\r\n    //**attributes:\r\n    //********************************************\r\n    \r\n    private readonly _renderables   : Set<IRenderable>;\r\n    private readonly _renderer      : Canvas2DRenderer;\r\n    private readonly _scene         : Scene;\r\n    private _camera                 : Camera;\r\n    \r\n    //********************************************\r\n    //**ctor:\r\n    //********************************************\r\n    \r\n    constructor(canvas: HTMLCanvasElement, scene: Scene) {\r\n        this._renderables = new Set<IRenderable>();\r\n        this._renderer = new Canvas2DRenderer(canvas);\r\n        this._scene = scene;\r\n    }\r\n    \r\n    //********************************************\r\n    //**public:\r\n    //********************************************\r\n    \r\n    get camera(): Camera { return this._camera; }\r\n    set camera(camera: Camera) { this._camera = camera; }\r\n    \r\n    /**\r\n     * \r\n     */\r\n    add(updateable: IRenderable): void {\r\n        if (updateable == null) {\r\n            throw new Error(\"Updateable cannot be null er undefined\");\r\n        }\r\n\r\n        this._renderables.add(updateable);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param updateable \r\n     */\r\n    remove(updateable: IRenderable): void {\r\n        if (updateable == null) {\r\n            throw new Error(\"Cannot delete updateable cannot be null er undefined\");\r\n        }\r\n\r\n        this._renderables.delete(updateable);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param deltaTime \r\n     */\r\n    render(): void {\r\n        if(this._camera != null) {\r\n            this._renderables.forEach(x => x.render(this._renderer, this._camera));\r\n        } else {\r\n           this._renderNoCameraMessage();\r\n        }\r\n    }\r\n    \r\n    //********************************************************************************\r\n    //** private:\r\n    //********************************************************************************\r\n    \r\n    private _renderNoCameraMessage(): void {\r\n        let viewPort    : ViewPort = this._scene.game.viewPort;\r\n        let txt         : string = \"No cameras rendering\";\r\n        let txtWidth    : number = this._renderer.getTextWidth(txt);\r\n        let x           : number = viewPort.width/2 - txtWidth/2;\r\n        let y           : number = viewPort.height/2;\r\n\r\n        this._renderer.renderText(txt, x, y);\r\n    }\r\n}","import { IState } from \"../state/State\";\r\nimport { Game } from \"../Game\";\r\nimport { UpdateManager } from \"../update/UpdateManager\";\r\nimport { RenderManager } from \"../rendering/RenderManager\";\r\nimport { GameObject } from \"../gameobjects/gameobject\";\r\nimport {Camera} from \"../gameobjects/Camera\";\r\n\r\n/**\r\n * A scene that can update and render game objects.\r\n */\r\nexport class Scene implements IState<Game> {\r\n    \r\n    //********************************************\r\n    //**attributes:\r\n    //********************************************\r\n    \r\n    private readonly _game            : Game;\r\n    private readonly _updateManager   : UpdateManager;\r\n    private readonly _rendererManager : RenderManager;\r\n    private readonly _gameObjects     : GameObject[] = [];\r\n    private _camera: Camera;\r\n    \r\n    //********************************************\r\n    //**ctor:\r\n    //********************************************\r\n    \r\n    constructor(game: Game) {\r\n        this._game = game;\r\n        this._updateManager = new UpdateManager();\r\n        this._rendererManager = new RenderManager(game.canvas, this);\r\n    }\r\n    \r\n    //********************************************\r\n    //**getters:\r\n    //********************************************\r\n    \r\n    get game()          : Game          { return this._game;}\r\n    get updateManager() : UpdateManager { return this._updateManager; }\r\n    get renderer()      : RenderManager { return this._rendererManager; }\r\n    get camera()        : Camera        { return this._camera; }\r\n    \r\n    //********************************************\r\n    //**public:\r\n    //********************************************\r\n\r\n    /**\r\n     * Adds a game object to the scene\r\n     * \r\n     * @param {GameObject} gameobject\r\n     */\r\n    addGameObject(gameobject: GameObject): void {\r\n        this._gameObjects.push(gameobject);\r\n    } \r\n\r\n    /**\r\n     * Sets the main camera and adds camera to scene\r\n     * @param {Camera} camera\r\n     */\r\n    setMainCamera(camera: Camera): void {\r\n        this._camera = camera;\r\n        this._rendererManager.camera = camera;\r\n        this.addGameObject(camera);\r\n    }\r\n\r\n    /**\r\n     * Initializes the scene and all \r\n     * it's components.\r\n     * \r\n     * @param {Game} game\r\n     */\r\n    initialize(game: Game): void {\r\n        \r\n        this._gameObjects.forEach(x => x.initialize());\r\n    }\r\n\r\n    /**\r\n     * Pause scene\r\n     * @param entity\r\n     */\r\n    pause(entity: any): void {\r\n        //TODO: pause rendering and updating    \r\n    }\r\n\r\n    /**\r\n     * Resume scene. \r\n     * @param entity\r\n     */\r\n    resume(entity: any): void {\r\n        //TODO: resume rendering and updating\r\n    }\r\n\r\n    /**\r\n     * Dispose scene and all its components. \r\n     * @param {Game} entity\r\n     */\r\n    dispose(entity: Game): void {\r\n        this._gameObjects.forEach(x => x.dispose());\r\n    }\r\n}","import { StateMachine } from \"../state/StateMachine\";\r\nimport { Game } from \"../Game\";\r\nimport { Scene } from \"./Scene\";\r\n\r\n/**\r\n * A manager for managing scenes. \r\n */\r\nexport class SceneManager extends StateMachine<Game> {\r\n    /**\r\n     * Updates the current scene\r\n     * @param deltaTime - time since last frame.\r\n     */\r\n    update(deltaTime: number): void {\r\n        let scene: Scene = this.peek() as Scene;\r\n        if (scene != null) {\r\n            scene.updateManager.update(deltaTime);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Render the current scene\r\n     */\r\n    renderScene(): void {\r\n        let scene: Scene = this.peek() as Scene;\r\n        if (scene != null) {\r\n            scene.renderer.render();\r\n        }\r\n    }\r\n}","import { IState } from \"./State\";\r\n\r\n/**\r\n * A state machine for handeling states.\r\n */\r\nexport class StateMachine<T> {\r\n    \"use strict\";\r\n\r\n    //********************************************\r\n    //** attributes:\r\n    //********************************************\r\n    \r\n    private _options            : StateMachineOptions;\r\n    private _stateStack         : IState<T>[] = [];\r\n    private readonly _entity    : T;\r\n\r\n    //********************************************\r\n    //**ctor:\r\n    //********************************************\r\n    \r\n    /**\r\n     * \r\n     * @param entity The owner of this state manager. \r\n     * @param [options] State machine options.\r\n     */\r\n    constructor(entity: T, options?:StateMachineOptions) {\r\n        this._options = Object.assign({}, _defaultOptions, options);\r\n        this._entity  = entity;\r\n    }\r\n\r\n    /**\r\n     * Sets the current state.\r\n     * \r\n     * @param state \r\n     */\r\n    push(state: IState<T>): void {\r\n        if(state == null) {\r\n            throw new Error(\"Cannot push null or undefinde to state stack\");\r\n        }\r\n\r\n        if (this._stateStack.length > 0) {\r\n            this.peek().pause(this._entity);\r\n        }\r\n\r\n        this._stateStack.push(state);\r\n        state.initialize(this._entity);\r\n    }\r\n\r\n    /**\r\n     * Sets the active state and removes resets history. \r\n     * \r\n     * @param state \r\n     */\r\n    pushAndClearHistory(state: IState<T>): void {\r\n        if (state == null) {\r\n            throw new Error(\"State cannot be null or undefined\");\r\n        }\r\n\r\n        this._stateStack = [];\r\n        this._stateStack.push(state);\r\n        state.initialize(this._entity)\r\n    }\r\n\r\n    /**\r\n     * Returns the first element in the stack without \r\n     * removing it.\r\n     */\r\n    peek(): IState<T> {\r\n        if(this._stateStack.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        return this._stateStack[this._stateStack.length-1];\r\n    }\r\n    \r\n    /**\r\n     * Sets state history.\r\n     * \r\n     * @param states \r\n     */\r\n    setHistory(states: IState<T>[]): void {\r\n        if (states == null) {\r\n            throw new Error(\"Cannot set history state collection is null or undefined\");\r\n        }\r\n\r\n        this._stateStack = states.slice(0, this._options.maxHistoryLenght);\r\n    }\r\n\r\n    /**\r\n     * Pops the current state off the top off the history stack\r\n     * and calls resume on next state in the stack.\r\n     */\r\n    pop(): IState<T> {\r\n        if (this._stateStack.length <= 0) {\r\n            return null;\r\n        }\r\n        \r\n        let removed = this._stateStack.pop();\r\n        let top = this.peek();\r\n        if (top != null) {\r\n            top.resume(this._entity);\r\n        }\r\n\r\n        return removed;\r\n    }\r\n}\r\n\r\n\r\nexport interface StateMachineOptions {\r\n    maxHistoryLenght?: number;\r\n}\r\n\r\n\r\nlet _defaultOptions: StateMachineOptions = {\r\n    maxHistoryLenght: 10\r\n}","import { IUpdateable } from \"./IUpdateable\";\r\n\r\nexport class UpdateManager {\r\n    \r\n    //********************************************\r\n    //**attributes:\r\n    //********************************************\r\n    \r\n    private readonly _updateables: Set<IUpdateable>;\r\n    \r\n    //********************************************\r\n    //**ctor:\r\n    //********************************************\r\n    \r\n    constructor() {\r\n        this._updateables = new Set<IUpdateable>();\r\n    }\r\n    \r\n    //********************************************\r\n    //**public:\r\n    //********************************************\r\n    \r\n    /**\r\n     * \r\n     */\r\n    add(updateable: IUpdateable): void {\r\n        if (updateable == null) {\r\n            throw new Error(\"Updateable cannot be null er undefined\");\r\n        }\r\n\r\n        this._updateables.add(updateable);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param updateable \r\n     */\r\n    remove(updateable: IUpdateable): void {\r\n        if (updateable == null) {\r\n            throw new Error(\"Cannot delete updateable cannot be null er undefined\");\r\n        }\r\n\r\n        this._updateables.delete(updateable);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param deltaTime \r\n     */\r\n    update(deltaTime: number): void {\r\n        this._updateables.forEach(x => x.update(deltaTime));\r\n    }\r\n}","import {Behaviour} from \"../../engine/components/Behaviour\";\r\nimport {Vector2D} from \"../../engine/math/Vector2D\";\r\nimport {KeyCode} from \"../../engine/input/KeyCode\";\r\nimport {Transform} from \"../../engine/components/Transform\";\r\n\r\nexport class MoveCameraBehaviour extends Behaviour {\r\n    //********************************************************************************\r\n    //** attributes:\r\n    //********************************************************************************\r\n    \r\n    public speed: number = 100;\r\n    private _transform: Transform;\r\n    \r\n    //********************************************************************************\r\n    //** public:\r\n    //********************************************************************************\r\n\r\n    /**\r\n     * Initialize component.\r\n     */\r\n    initialize(): void {\r\n        this._transform = this._owner.getComponent(Transform);\r\n    }\r\n\r\n    /**\r\n     * Update component.\r\n     * @param {number} deltaTime\r\n     */\r\n    update(deltaTime: number): void {\r\n        let dir: Vector2D = Vector2D.Zero;\r\n        \r\n        if (this._input.isKeyDown(KeyCode.Arrow_Left)) {\r\n            dir = dir.add(Vector2D.Left);\r\n        }\r\n        if (this._input.isKeyDown(KeyCode.Arrow_Right)) {\r\n            dir = dir.add(Vector2D.Right);\r\n        }\r\n        if (this._input.isKeyDown(KeyCode.Arrow_Up)) {\r\n            dir = dir.add(Vector2D.Up);\r\n        }\r\n        if (this._input.isKeyDown(KeyCode.Arrow_Down)) {\r\n            dir = dir.add(Vector2D.Down);\r\n        }\r\n\r\n        let acceleration: Vector2D = dir.multiply(this.speed * deltaTime);\r\n        this._transform.translate(acceleration);\r\n    }\r\n}","import { Behaviour } from \"../../engine/components/Behaviour\";\r\nimport { KeyCode } from \"../../engine/input/KeyCode\";\r\nimport { Transform } from \"../../engine/components/Transform\";\r\nimport { Vector2D } from \"../../engine/math/Vector2D\";\r\n\r\nexport class PlayerInputBehaviour extends Behaviour {\r\n    //********************************************************************************\r\n    //** attributes:\r\n    //********************************************************************************\r\n    \r\n    public speed: number = 100;\r\n    private _transform: Transform;\r\n    \r\n    //********************************************************************************\r\n    //** public:\r\n    //********************************************************************************\r\n\r\n    /**\r\n     * Initialize component\r\n     */\r\n    initialize(): void {\r\n        this._transform = this._owner.getComponent(Transform);\r\n    }\r\n\r\n    /**\r\n     * Update component\r\n     * @param {number} deltaTime\r\n     */\r\n    update(deltaTime: number): void {\r\n        let dir: Vector2D = Vector2D.Zero;\r\n        if (this._input.isKeyDown(KeyCode.A)) {\r\n            dir = dir.add(Vector2D.Left);\r\n        }\r\n        if (this._input.isKeyDown(KeyCode.D)) {\r\n            dir = dir.add(Vector2D.Right); \r\n        }\r\n        if (this._input.isKeyDown(KeyCode.W)) {\r\n            dir = dir.add(Vector2D.Up);\r\n        }\r\n        if (this._input.isKeyDown(KeyCode.S)) {\r\n            dir = dir.add(Vector2D.Down);\r\n        }\r\n        let acceleration: Vector2D = dir.multiply(this.speed * deltaTime);\r\n        this._transform.translate(acceleration);\r\n    }\r\n}","import { Game } from \"./engine/Game\";\r\nimport { Scene } from \"./engine/scenes/Scene\";\r\nimport { ShapeRenderer } from \"./engine/components/ShapeRenderer\";\r\nimport { Circle } from \"./engine/geometry/Circle\";\r\nimport { PlayerInputBehaviour } from \"./game/components/PlayerInputBehaviour\";\r\nimport { GameObject } from \"./engine/gameobjects/gameobject\";\r\nimport {Camera} from \"./engine/gameobjects/Camera\";\r\nimport {MoveCameraBehaviour} from \"./game/components/MoveCameraBehaviour\";\r\nimport {Rectangle} from \"./engine/geometry/Rectangle\";\r\n\r\n// create game instance. \r\nlet game: Game = new Game({clearColor: \"wheat\"});\r\n\r\n// create initial scene \r\nlet initialScene: Scene = new Scene(game);\r\n\r\n// create and add camera to scene\r\nlet camera: Camera = new Camera(initialScene);\r\ncamera.attachComponent(MoveCameraBehaviour);\r\ninitialScene.setMainCamera(camera);\r\n\r\n// create a game object that represents the player.\r\nlet player: GameObject = new GameObject(initialScene);\r\n\r\n// attach a rendering component to player game object.\r\nlet renderer: ShapeRenderer = player.attachComponent(ShapeRenderer);\r\nrenderer.color = \"blue\";\r\nrenderer.shape = new Circle(30);\r\n\r\n// attach a PlayerInputBehaviour component to player.\r\nplayer.attachComponent(PlayerInputBehaviour);\r\n\r\n// add player to scene. \r\ninitialScene.addGameObject(player);\r\n\r\n// create a game object that represents a obstacle \r\nlet obstacle: GameObject = new GameObject(initialScene);\r\nobstacle.transform.translate(100, 100);\r\n\r\nlet obstacleShape: ShapeRenderer = obstacle.attachComponent(ShapeRenderer);\r\nobstacleShape.color = \"red\";\r\nobstacleShape.shape = new Rectangle(100, 100);\r\n\r\ninitialScene.addGameObject(obstacle);\r\n\r\n// push initial scene to game's scene manager. \r\ngame.sceneManager.push(initialScene);\r\n\r\n// initialize game\r\ngame.init();\r\n\r\n// run game loop\r\ngame.run();"],"sourceRoot":""}